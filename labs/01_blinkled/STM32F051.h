#define REG_RCC_CR (volatile uint32_t*)(uintptr_t)0x40021000U // Clock Control Register
#define RCC_CR_HSION 0U //  HSI clock enable
#define RCC_CR_HSIRDY 1U //  HSI clock ready flag
#define RCC_CR_HSITRIM 3U //  HSI clock trimming
#define RCC_CR_HSICAL 8U //  HSI clock calibration
#define RCC_CR_HSEON 16U //  HSE clock enable
#define RCC_CR_HSERDY 17U //  HSE clock ready flag
#define RCC_CR_HSEBYP 18U //  HSE crystal oscillator bypass
#define RCC_CR_CSSON 19U //  Clock security system enable
#define RCC_CR_PLLON 24U //  PLL enable
#define RCC_CR_PLLRDY 25U //  PLL clock ready flag

#define REG_RCC_CFGR (volatile uint32_t*)(uintptr_t)0x40021004U // PLL Configuration Register
#define RCC_CFGR_SW 0U //  System clock switch
#define RCC_CFGR_SWS 2U //  System clock switch status
#define RCC_CFGR_HPRE 4U //  HCLK prescaler
#define RCC_CFGR_PPRE 8U //  PCLK prescaler
#define RCC_CFGR_ADCPRE 14U //  ADC prescaler
#define RCC_CFGR_PLLSRC 15U //  PLL input clock source
#define RCC_CFGR_PLLXTPRE 17U //  HSE divider for PLL input clock
#define RCC_CFGR_PLLMUL 18U //  PLL multiplication factor
#define RCC_CFGR_MCO 24U //  Microcontroller clock output

#define REG_RCC_AHBENR (volatile uint32_t*)(uintptr_t)0x40021014U // AHB1 Peripheral Clock Enable Register
#define RCC_AHBENR_DMAEN 0U //  clock enable
#define RCC_AHBENR_DMA2EN 1U //  DMA2 clock enable
#define RCC_AHBENR_SRAMEN 2U //  SRAM interface clock enable
#define RCC_AHBENR_FLITFEN 4U //  FLITF clock enable
#define RCC_AHBENR_CRCEN 6U //  CRC clock enable
#define RCC_AHBENR_IOPAEN 17U //  I/O port A clock enable
#define RCC_AHBENR_IOPBEN 18U //  I/O port B clock enable
#define RCC_AHBENR_IOPCEN 19U //  I/O port C clock enable
#define RCC_AHBENR_IOPDEN 20U //  I/O port D clock enable
#define RCC_AHBENR_IOPEEN 21U //  I/O port E clock enable
#define RCC_AHBENR_IOPFEN 22U //  I/O port F clock enable
#define RCC_AHBENR_TSCEN 24U //  Touch sensing controller clock enable

#define REG_RCC_CFGR2 (volatile uint32_t*)(uintptr_t)0x4002102cU // Clock configuration register 2
#define RCC_CFGR2_PREDIV 1U //  PREDIV division factor

#define REG_GPIOC_MODER (volatile uint32_t*)(uintptr_t)0x48000800U //     GPIO port mode register

#define REG_GPIOC_OTYPER (volatile uint32_t*)(uintptr_t)0x48000804U // GPIO port output type register

#define REG_GPIOC_ODR (volatile uint32_t*)(uintptr_t)0x48000814U // GPIO port output data register


/////////////////////////////////////////////////////////////////////////////////////////////////////

#define SET_BIT(REG, BIT)   *(REG) |= 1U << (BIT)
#define CLEAR_BIT(REG, BIT) *(REG) &= ~(1U << (BIT))
#define READ_BIT(REG, BIT)  ((*(REG) >> (BIT)) & 1U)

#define SET_BITS(REG, SBIT, VAL)    *(REG) |= (VAL) << (SBIT)
#define RESET_BITS(REG, SBIT, MASK, VAL) *(REG) = ((*(REG) & ~((MASK) << (SBIT))) | ((VAL) << (SBIT)))
#define READ_BITS(REG, SBIT, MASK)  ((*(REG) >> (SBIT)) & (MASK))

/////////////////////////////////////////////////////////////////////////////////////////////////////

#define SET_RCC_CR_BIT(BIT) SET_BIT(REG_RCC_CR, BIT)
#define CLEAR_RCC_CR_BIT(BIT) CLEAR_BIT(REG_RCC_CR, BIT)
#define READ_RCC_CR_BIT(BIT) READ_BIT(REG_RCC_CR, BIT)

#define SET_RCC_CR_HSION() SET_BIT(REG_RCC_CR, RCC_CR_HSION)
#define CLEAR_RCC_CR_HSION() CLEAR_BIT(REG_RCC_CR, RCC_CR_HSION)
#define READ_RCC_CR_HSION() READ_BIT(REG_RCC_CR, RCC_CR_HSION)

#define SET_RCC_CR_HSIRDY() SET_BIT(REG_RCC_CR, RCC_CR_HSIRDY)
#define CLEAR_RCC_CR_HSIRDY() CLEAR_BIT(REG_RCC_CR, RCC_CR_HSIRDY)
#define READ_RCC_CR_HSIRDY() READ_BIT(REG_RCC_CR, RCC_CR_HSIRDY)

#define SET_RCC_CR_HSITRIM(VAL) SET_BITS(REG_RCC_CR, RCC_CR_HSITRIM, VAL)
#define RESET_RCC_CR_HSITRIM(VAL) RESET_BITS(REG_RCC_CR, RCC_CR_HSITRIM, 0b11111U, VAL)
#define READ_RCC_CR_HSITRIM() READ_BITS(REG_RCC_CR, RCC_CR_HSITRIM, 0b11111U)

#define SET_RCC_CR_HSICAL(VAL) SET_BITS(REG_RCC_CR, RCC_CR_HSICAL, VAL)
#define RESET_RCC_CR_HSICAL(VAL) RESET_BITS(REG_RCC_CR, RCC_CR_HSICAL, 0b11111111U, VAL)
#define READ_RCC_CR_HSICAL() READ_BITS(REG_RCC_CR, RCC_CR_HSICAL, 0b11111111U)

#define SET_RCC_CR_HSEON() SET_BIT(REG_RCC_CR, RCC_CR_HSEON)
#define CLEAR_RCC_CR_HSEON() CLEAR_BIT(REG_RCC_CR, RCC_CR_HSEON)
#define READ_RCC_CR_HSEON() READ_BIT(REG_RCC_CR, RCC_CR_HSEON)

#define SET_RCC_CR_HSERDY() SET_BIT(REG_RCC_CR, RCC_CR_HSERDY)
#define CLEAR_RCC_CR_HSERDY() CLEAR_BIT(REG_RCC_CR, RCC_CR_HSERDY)
#define READ_RCC_CR_HSERDY() READ_BIT(REG_RCC_CR, RCC_CR_HSERDY)

#define SET_RCC_CR_HSEBYP() SET_BIT(REG_RCC_CR, RCC_CR_HSEBYP)
#define CLEAR_RCC_CR_HSEBYP() CLEAR_BIT(REG_RCC_CR, RCC_CR_HSEBYP)
#define READ_RCC_CR_HSEBYP() READ_BIT(REG_RCC_CR, RCC_CR_HSEBYP)

#define SET_RCC_CR_CSSON() SET_BIT(REG_RCC_CR, RCC_CR_CSSON)
#define CLEAR_RCC_CR_CSSON() CLEAR_BIT(REG_RCC_CR, RCC_CR_CSSON)
#define READ_RCC_CR_CSSON() READ_BIT(REG_RCC_CR, RCC_CR_CSSON)

#define SET_RCC_CR_PLLON() SET_BIT(REG_RCC_CR, RCC_CR_PLLON)
#define CLEAR_RCC_CR_PLLON() CLEAR_BIT(REG_RCC_CR, RCC_CR_PLLON)
#define READ_RCC_CR_PLLON() READ_BIT(REG_RCC_CR, RCC_CR_PLLON)

#define SET_RCC_CR_PLLRDY() SET_BIT(REG_RCC_CR, RCC_CR_PLLRDY)
#define CLEAR_RCC_CR_PLLRDY() CLEAR_BIT(REG_RCC_CR, RCC_CR_PLLRDY)
#define READ_RCC_CR_PLLRDY() READ_BIT(REG_RCC_CR, RCC_CR_PLLRDY)


#define SET_RCC_CFGR_BIT(BIT) SET_BIT(REG_RCC_CFGR, BIT)
#define CLEAR_RCC_CFGR_BIT(BIT) CLEAR_BIT(REG_RCC_CFGR, BIT)
#define READ_RCC_CFGR_BIT(BIT) READ_BIT(REG_RCC_CFGR, BIT)

#define SET_RCC_CFGR_SW(VAL) SET_BITS(REG_RCC_CFGR, RCC_CFGR_SW, VAL)
#define RESET_RCC_CFGR_SW(VAL) RESET_BITS(REG_RCC_CFGR, RCC_CFGR_SW, 0b11U, VAL)
#define READ_RCC_CFGR_SW() READ_BITS(REG_RCC_CFGR, RCC_CFGR_SW, 0b11U)

#define SET_RCC_CFGR_SWS(VAL) SET_BITS(REG_RCC_CFGR, RCC_CFGR_SWS, VAL)
#define RESET_RCC_CFGR_SWS(VAL) RESET_BITS(REG_RCC_CFGR, RCC_CFGR_SWS, 0b11U, VAL)
#define READ_RCC_CFGR_SWS() READ_BITS(REG_RCC_CFGR, RCC_CFGR_SWS, 0b11U)

#define SET_RCC_CFGR_HPRE(VAL) SET_BITS(REG_RCC_CFGR, RCC_CFGR_HPRE, VAL)
#define RESET_RCC_CFGR_HPRE(VAL) RESET_BITS(REG_RCC_CFGR, RCC_CFGR_HPRE, 0b1111U, VAL)
#define READ_RCC_CFGR_HPRE() READ_BITS(REG_RCC_CFGR, RCC_CFGR_HPRE, 0b1111U)

#define SET_RCC_CFGR_PPRE(VAL) SET_BITS(REG_RCC_CFGR, RCC_CFGR_PPRE, VAL)
#define RESET_RCC_CFGR_PPRE(VAL) RESET_BITS(REG_RCC_CFGR, RCC_CFGR_PPRE, 0b11U, VAL)
#define READ_RCC_CFGR_PPRE() READ_BITS(REG_RCC_CFGR, RCC_CFGR_PPRE, 0b11U)

#define SET_RCC_CFGR_ADCPRE() SET_BIT(REG_RCC_CFGR, RCC_CFGR_ADCPRE)
#define CLEAR_RCC_CFGR_ADCPRE() CLEAR_BIT(REG_RCC_CFGR, RCC_CFGR_ADCPRE)
#define READ_RCC_CFGR_ADCPRE() READ_BIT(REG_RCC_CFGR, RCC_CFGR_ADCPRE)

#define SET_RCC_CFGR_PLLSRC(VAL) SET_BITS(REG_RCC_CFGR, RCC_CFGR_PLLSRC, VAL)
#define RESET_RCC_CFGR_PLLSRC(VAL) RESET_BITS(REG_RCC_CFGR, RCC_CFGR_PLLSRC, 0b11U, VAL)
#define READ_RCC_CFGR_PLLSRC() READ_BITS(REG_RCC_CFGR, RCC_CFGR_PLLSRC, 0b11U)

#define SET_RCC_CFGR_PLLXTPRE() SET_BIT(REG_RCC_CFGR, RCC_CFGR_PLLXTPRE)
#define CLEAR_RCC_CFGR_PLLXTPRE() CLEAR_BIT(REG_RCC_CFGR, RCC_CFGR_PLLXTPRE)
#define READ_RCC_CFGR_PLLXTPRE() READ_BIT(REG_RCC_CFGR, RCC_CFGR_PLLXTPRE)

#define SET_RCC_CFGR_PLLMUL(VAL) SET_BITS(REG_RCC_CFGR, RCC_CFGR_PLLMUL, VAL)
#define RESET_RCC_CFGR_PLLMUL(VAL) RESET_BITS(REG_RCC_CFGR, RCC_CFGR_PLLMUL, 0b1111U, VAL)
#define READ_RCC_CFGR_PLLMUL() READ_BITS(REG_RCC_CFGR, RCC_CFGR_PLLMUL, 0b1111U)

#define SET_RCC_CFGR_MCO(VAL) SET_BITS(REG_RCC_CFGR, RCC_CFGR_MCO, VAL)
#define RESET_RCC_CFGR_MCO(VAL) RESET_BITS(REG_RCC_CFGR, RCC_CFGR_MCO, 0b1111U, VAL)
#define READ_RCC_CFGR_MCO() READ_BITS(REG_RCC_CFGR, RCC_CFGR_MCO, 0b1111U)


#define SET_RCC_AHBENR_BIT(BIT) SET_BIT(REG_RCC_AHBENR, BIT)
#define CLEAR_RCC_AHBENR_BIT(BIT) CLEAR_BIT(REG_RCC_AHBENR, BIT)
#define READ_RCC_AHBENR_BIT(BIT) READ_BIT(REG_RCC_AHBENR, BIT)

#define SET_RCC_AHBENR_DMAEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_DMAEN)
#define CLEAR_RCC_AHBENR_DMAEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_DMAEN)
#define READ_RCC_AHBENR_DMAEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_DMAEN)

#define SET_RCC_AHBENR_DMA2EN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_DMA2EN)
#define CLEAR_RCC_AHBENR_DMA2EN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_DMA2EN)
#define READ_RCC_AHBENR_DMA2EN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_DMA2EN)

#define SET_RCC_AHBENR_SRAMEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_SRAMEN)
#define CLEAR_RCC_AHBENR_SRAMEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_SRAMEN)
#define READ_RCC_AHBENR_SRAMEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_SRAMEN)

#define SET_RCC_AHBENR_FLITFEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_FLITFEN)
#define CLEAR_RCC_AHBENR_FLITFEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_FLITFEN)
#define READ_RCC_AHBENR_FLITFEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_FLITFEN)

#define SET_RCC_AHBENR_CRCEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_CRCEN)
#define CLEAR_RCC_AHBENR_CRCEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_CRCEN)
#define READ_RCC_AHBENR_CRCEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_CRCEN)

#define SET_RCC_AHBENR_IOPAEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPAEN)
#define CLEAR_RCC_AHBENR_IOPAEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPAEN)
#define READ_RCC_AHBENR_IOPAEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPAEN)

#define SET_RCC_AHBENR_IOPBEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPBEN)
#define CLEAR_RCC_AHBENR_IOPBEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPBEN)
#define READ_RCC_AHBENR_IOPBEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPBEN)

#define SET_RCC_AHBENR_IOPCEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPCEN)
#define CLEAR_RCC_AHBENR_IOPCEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPCEN)
#define READ_RCC_AHBENR_IOPCEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPCEN)

#define SET_RCC_AHBENR_IOPDEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPDEN)
#define CLEAR_RCC_AHBENR_IOPDEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPDEN)
#define READ_RCC_AHBENR_IOPDEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPDEN)

#define SET_RCC_AHBENR_IOPEEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPEEN)
#define CLEAR_RCC_AHBENR_IOPEEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPEEN)
#define READ_RCC_AHBENR_IOPEEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPEEN)

#define SET_RCC_AHBENR_IOPFEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPFEN)
#define CLEAR_RCC_AHBENR_IOPFEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPFEN)
#define READ_RCC_AHBENR_IOPFEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_IOPFEN)

#define SET_RCC_AHBENR_TSCEN() SET_BIT(REG_RCC_AHBENR, RCC_AHBENR_TSCEN)
#define CLEAR_RCC_AHBENR_TSCEN() CLEAR_BIT(REG_RCC_AHBENR, RCC_AHBENR_TSCEN)
#define READ_RCC_AHBENR_TSCEN() READ_BIT(REG_RCC_AHBENR, RCC_AHBENR_TSCEN)


#define SET_RCC_CFGR2_BIT(BIT) SET_BIT(REG_RCC_CFGR2, BIT)
#define CLEAR_RCC_CFGR2_BIT(BIT) CLEAR_BIT(REG_RCC_CFGR2, BIT)
#define READ_RCC_CFGR2_BIT(BIT) READ_BIT(REG_RCC_CFGR2, BIT)

#define SET_RCC_CFGR2_PREDIV(VAL) SET_BITS(REG_RCC_CFGR2, RCC_CFGR2_PREDIV, VAL)
#define RESET_RCC_CFGR2_PREDIV(VAL) RESET_BITS(REG_RCC_CFGR2, RCC_CFGR2_PREDIV, 0b1111U, VAL)
#define READ_RCC_CFGR2_PREDIV() READ_BITS(REG_RCC_CFGR2, RCC_CFGR2_PREDIV, 0b1111U)


#define SET_GPIOC_MODER_BITS(BIT, VAL) SET_BITS(REG_GPIOC_MODER, 2U*BIT, VAL)
#define RESET_GPIOC_MODER_BITS(BIT, VAL) RESET_BITS(REG_GPIOC_MODER, 2U*BIT, 0b11U, VAL)
#define READ_GPIOC_MODER_BITS(BIT) READ_BITS(REG_GPIOC_MODER, 2U*BIT, 0b11U)


#define SET_GPIOC_OTYPER_BIT(BIT) SET_BIT(REG_GPIOC_OTYPER, BIT)
#define CLEAR_GPIOC_OTYPER_BIT(BIT) CLEAR_BIT(REG_GPIOC_OTYPER, BIT)
#define READ_GPIOC_OTYPER_BIT(BIT) READ_BIT(REG_GPIOC_OTYPER, BIT)


#define SET_GPIOC_ODR_BIT(BIT) SET_BIT(REG_GPIOC_ODR, BIT)
#define CLEAR_GPIOC_ODR_BIT(BIT) CLEAR_BIT(REG_GPIOC_ODR, BIT)
#define READ_GPIOC_ODR_BIT(BIT) READ_BIT(REG_GPIOC_ODR, BIT)


